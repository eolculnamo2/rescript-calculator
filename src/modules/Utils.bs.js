// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";

var IndexUnaccountedFor = /* @__PURE__ */Caml_exceptions.create("Utils.IndexUnaccountedFor");

function insertAtIndex(arr, index, item) {
  var newArr = [];
  for(var i = 0 ,i_finish = arr.length; i <= i_finish; ++i){
    var tmp;
    if (i < index) {
      tmp = Belt_Option.getExn(Belt_Array.get(arr, i));
    } else if (i === index) {
      tmp = item;
    } else if (i > index) {
      tmp = Belt_Option.getExn(Belt_Array.get(arr, i - 1 | 0));
    } else {
      throw {
            RE_EXN_ID: IndexUnaccountedFor,
            Error: new Error()
          };
    }
    newArr.push(tmp);
  }
  return newArr;
}

function getAndRemove(arr, index) {
  var value = Belt_Array.get(arr, index);
  if (value === undefined) {
    return ;
  }
  var filtered_arr = arr.filter(function (param, i) {
        return i !== index;
      });
  return [
          Caml_option.valFromOption(value),
          filtered_arr
        ];
}

var $$Array = {
  insertAtIndex: insertAtIndex,
  getAndRemove: getAndRemove
};

export {
  IndexUnaccountedFor ,
  $$Array ,
  
}
/* No side effect */
